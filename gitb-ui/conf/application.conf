# This is the main configuration file for the application.
#
# Important: The properties listed in this file are used for development purposes. Any use in production of secrets,
# keys or passwords that match the existing defaults will result in an error.
#
# ~~~~~
http.port=9000

play.http.parser.maxDiskBuffer=100MB
play.http.parser.maxMemoryBuffer=100MB
parsers.anyContent.maxLength=100MB

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.http.secret.key="value_used_during_development_to_be_replaced_in_production"
play.http.secret.key=${?APPLICATION_SECRET}

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

#General configurations
server.request.timeout.seconds=60
token.length=50  #access and refresh token lengths
testbed.service.url="http://localhost:8080/itbsrv/TestbedService"
testbed.service.url=${?TESTBED_SERVICE_URL}

testbed.client.url="http://localhost:9090/TestbedClient"
testbed.client.url=${?TESTBED_CLIENT_URL}
testcase.repository.path = "/gitb-repository"
testcase.repository.path = ${?TESTBED_REPOSITORY_PATH}

# The number of days for which test session data will be maintained without being archived
testsession.archive.threshold = 30
# The number of bytes that are allowed to be embedded directly within test step reports
testsession.embeddedReportData.threshold = 1000

#SMTP configuration
email.enabled="false"
email.smtp.ssl.enabled="false"
email.smtp.ssl.protocols="TLSv1.2"
email.smtp.starttls.enabled="false"
email.smtp.auth.enabled="false"
email.smtp.auth.password=""
# Maximum size in megabytes
email.attachments.maxSize=5
# Maximum count of allowed attachments
email.attachments.maxCount=5
# Allowed attachment types
email.attachments.allowedTypes="text/plain,image/gif,image/png,image/jpeg,application/pdf,application/xml,text/xml"

survey.enabled="true"
survey.address="https://ec.europa.eu/eusurvey/runner/itb"

# User guide configuration
userguide.ou="https://www.itb.ec.europa.eu/docs/itb-ou/latest"
userguide.oa="https://www.itb.ec.europa.eu/docs/itb-oa/latest"
userguide.ta="https://www.itb.ec.europa.eu/docs/itb-ta/latest"
userguide.ca="https://www.itb.ec.europa.eu/docs/itb-ca/latest"

moreinfo.enabled="true"
moreinfo.address="https://joinup.ec.europa.eu/collection/interoperability-test-bed-repository/solution/interoperability-test-bed"

releaseinfo.enabled="true"
releaseinfo.address="https://www.itb.ec.europa.eu/docs/itb-ou/latest/changeHistory/"

guides.eulogin.use="https://www.itb.ec.europa.eu/docs/guides/latest/usingEULogin"
guides.eulogin.migration="https://www.itb.ec.europa.eu/docs/guides/latest/migratingToEULogin"

# Antivirus configuration
# ~~~~~~~~~~~~~~~~~~~~~~~

antivirus.enabled="false"
antivirus.host="localhost"
antivirus.port="3310"
antivirus.timeout="0"

# Encryption configuration
# ~~~~~~~~~~~~~~~~~~~~~~~~
masterPassword = "value_used_during_development_to_be_replaced_in_production"
masterPassword = ${?MASTER_PASSWORD}
masterApiKey = ""
masterApiKey = ${?AUTOMATION_API_MASTER_KEY}
hmac.key = "devKey"
hmac.key = ${?HMAC_KEY}
hmac.window = "10000"
hmac.window = ${?HMAC_WINDOW}
dataArchive.key = ""
dataArchive.key = ${?DATA_ARCHIVE_KEY}

# Proxy configuration
proxy.enabled = "false"
proxy.host = ""
proxy.port = ""
proxy.auth.enabled = false
proxy.auth.user = ""
proxy.auth.password = ""

# Signing configuration
# ~~~~~~~~~~~~~~~~~~~~~
signature.tsa.enabled = "false"
signature.tsa.url = "https://freetsa.org/tsr"

# Test suite validation configuration
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
validation.tdl.external.enabled = "false"
validation.tdl.external.url = "http://localhost:8181/services/validation?wsdl"

# Authentication configuration
authentication.cookie.path = "/"
# Session timeout thresholds (in seconds) - negative to disable.
authentication.session.maxIdleTime=3600
authentication.session.maxTotalTime=10800
authentication.sso.enabled = "false"
authentication.sso.inMigrationPeriod = "false"
#
# EU Login settings.
#
authentication.sso.url.login = "https://localhost:7002/cas/login"
authentication.sso.url.callback = "http://localhost:9000/callback"
authentication.sso.casVersion = 2
# Supported authentication levels are: "" (any), "BASIC" (at least BASIC), "MEDIUM" (at least MEDIUM) or "HIGH" (only HIGH).
authentication.sso.authenticationLevel = ""
authentication.sso.authenticationLevelParameter = "authenticationLevel"
authentication.sso.customParameters.userDetails = "userDetails"
authentication.sso.userAttributes.email = "email"
authentication.sso.userAttributes.firstName = "firstName"
authentication.sso.userAttributes.lastName = "lastName"
authentication.sso.userAttributes.authenticationLevel = "authenticationLevel"
authentication.sso.ticketValidationUrlSuffix = "laxValidate"

pac4j.security.rules = [
  # 'Catch all' rule to make sure the whole application stays secure.
  {".*" = {
    authorizers = "_authenticated_"
    clients = "euLoginCASClient"
    matchers = "excludedPath"
  }}
]

play.http.session.path = "/"
# This needs to be lax to avoid infinite looping during SSO authentication redirects.
play.http.session.sameSite = "lax"
play.http.session.httpOnly = true
play.http.session.secure = true
play.http.session.secure = ${?SESSION_SECURE}
play.http.session.cookieName = "__Host-ITB_SESSION"
play.http.session.cookieName = ${?SESSION_COOKIE_NAME}

demos.enabled = "false"
demos.account = -1

registration.enabled = "true"

# Database configuration
# ~~~~~~~~~~~~~~~~~~~~~~
slick.dbs.default.profile="slick.jdbc.MySQLProfile$"
slick.dbs.default.db.driver=com.mysql.cj.jdbc.Driver
slick.dbs.default.db.url="jdbc:mysql://localhost/gitb?characterEncoding=UTF-8&useUnicode=true&autoReconnect=true&useSSL=false&verifyServerCertificate=false&allowPublicKeyRetrieval=true"
slick.dbs.default.db.url=${?DB_DEFAULT_URL}
slick.dbs.default.db.user="gitb"
slick.dbs.default.db.user=${?DB_DEFAULT_USER}
slick.dbs.default.db.password="gitb"
slick.dbs.default.db.password=${?DB_DEFAULT_PASSWORD}

#Flyway migration configuration
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
db.default.url="jdbc:mysql://localhost/gitb?characterEncoding=UTF-8&useUnicode=true&autoReconnect=true&useSSL=false&verifyServerCertificate=false&allowPublicKeyRetrieval=true"
db.default.url=${?DB_DEFAULT_URL}
db.default.driver=com.mysql.cj.jdbc.Driver
db.default.user="gitb"
db.default.user=${?DB_DEFAULT_USER}
db.default.password="gitb"
db.default.password=${?DB_DEFAULT_PASSWORD}
db.default.rooturl="jdbc:mysql://localhost/"
db.default.rooturl=${?DB_DEFAULT_ROOTURL}
db.default.name="gitb"
db.default.migration.initOnMigrate=true
db.default.migration.auto=true
# Disabling migration validation because the current Flyway version in use is dependent on line feed characters that could lead to false positives.
db.default.migration.validateOnMigrate=false
db.default.migration.table="schema_version"

# Latest DB baseline to apply
latestDbBaselineScript=B111__Release_v1.23.0.sql

#Redis Server parameters
redis.host = "localhost"
redis.host = ${?REDIS_HOST}
redis.port = 6379

# Evolutions
# ~~~~~
play.evolutions.enabled=false

blocking-processor-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 32
  }
  throughput = 10
}

session-actor-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 2
        parallelism-factor = 2.0
        parallelism-max = 10
    }
    throughput = 10
}

play.application.loader = "CustomApplicationLoader"

play.modules.enabled += "modules.Module"
play.modules.enabled += "modules.SecurityModule"

pidfile.path = "/dev/null"

# Input sanitization configuration - START
include "input-sanitizer.conf"
# Input sanitization configuration - END

# API prefix to be used for all API routes
apiPrefix = "api"
# Regular expression defining password complexity rules
passwordComplexityRule = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#&()_â€“\\[{}\\]:;'"",?/\\\\*~$^+=<>]).{8,}$"
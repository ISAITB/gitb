#
# Build-in handler configurations.
#
# The embedded messaging handlers to consider for valid handler references.
validator.messagingHandlers = TCPMessaging, SoapMessaging, SoapMessagingV2, HttpMessaging, HttpMessagingV2, HttpsMessaging, HttpProxyMessaging, AS2Messaging, DNSMessaging, NonValidatingPeppolAS2Messaging, OFTP2Messaging, PeppolAS2Messaging, SMLMessaging, SMPFixedMessaging, SMPMessaging, UDPMessaging, SimulatedMessaging
# TCPMessaging inputs and configs.
validator.messagingHandlers.TCPMessaging.input.required = content
validator.messagingHandlers.TCPMessaging.deprecated = true
# SoapMessaging inputs and configs.
validator.messagingHandlers.SoapMessaging.input.optional = soap_message, http_headers, soap_attachments
validator.messagingHandlers.SoapMessaging.config.tx.optional = http.ssl
validator.messagingHandlers.SoapMessaging.config.receive.required = soap.version
validator.messagingHandlers.SoapMessaging.config.send.required = soap.version
validator.messagingHandlers.SoapMessaging.config.send.optional = soap.encoding, http.uri.extension
validator.messagingHandlers.SoapMessaging.deprecated = true
validator.messagingHandlers.SoapMessaging.replacedBy = SoapMessagingV2
# SoapMessagingV2 inputs and configs.
validator.messagingHandlers.SoapMessagingV2.input.send.required = uri, envelope
validator.messagingHandlers.SoapMessagingV2.input.send.optional = headers, version, attachments, action, tolerateNonSoapResponse, showRequestUri, showRequestBody, showRequestEnvelope, showRequestHeaders, showRequestAttachments, showResponseBody, showResponseAttachments, showResponseEnvelope, showResponseStatus, showResponseHeaders, showResponseError, requestHeadersToShow, requestHeadersToHide, requestAttachmentsToShow, requestAttachmentsToHide, responseHeadersToShow, responseHeadersToHide, responseAttachmentsToShow, responseAttachmentsToHide
validator.messagingHandlers.SoapMessagingV2.input.receive.required = envelope
validator.messagingHandlers.SoapMessagingV2.input.receive.optional = headers, version, attachments, status, uriExtension, showRequestUri, showRequestBody, showRequestEnvelope, showRequestHeaders, showRequestAttachments, showResponseBody, showResponseAttachments, showResponseEnvelope, showResponseStatus, showResponseHeaders, showResponseError, requestHeadersToShow, requestHeadersToHide, requestAttachmentsToShow, requestAttachmentsToHide, responseHeadersToShow, responseHeadersToHide, responseAttachmentsToShow, responseAttachmentsToHide
# HttpMessaging inputs and configs.
validator.messagingHandlers.HttpMessaging.input.optional = http_version, http_headers, http_body, http_parts
validator.messagingHandlers.HttpMessaging.config.tx.optional = http.ssl
validator.messagingHandlers.HttpMessaging.config.receive.optional = status.code
validator.messagingHandlers.HttpMessaging.config.send.required = http.method
validator.messagingHandlers.HttpMessaging.config.send.optional = http.uri, http.uri.extension, status.code
validator.messagingHandlers.HttpMessaging.deprecated = true
validator.messagingHandlers.HttpMessaging.replacedBy = HttpMessagingV2
# HttpMessagingV2 inputs and configs.
validator.messagingHandlers.HttpMessagingV2.input.send.required = uri
validator.messagingHandlers.HttpMessagingV2.input.send.optional = parameters, body, parts, method, headers, queryParameters, followRedirects, connectionTimeout, requestTimeout, showRequestUri, showRequestMethod, showRequestBody, showRequestHeaders, requestHeadersToShow, requestHeadersToHide, showResponseBody, showResponseStatus, showResponseHeaders, responseHeadersToShow, responseHeadersToHide
validator.messagingHandlers.HttpMessagingV2.input.receive.optional = method, headers, body, status, uriExtension, showRequestUri, showRequestMethod, showRequestBody, showRequestHeaders, requestHeadersToShow, requestHeadersToHide, showResponseBody, showResponseStatus, showResponseHeaders, responseHeadersToShow, responseHeadersToHide
# HttpsMessaging inputs and configs.
validator.messagingHandlers.HttpsMessaging.input.optional = http_headers, http_body
validator.messagingHandlers.HttpsMessaging.config.receive.optional = status.code
validator.messagingHandlers.HttpsMessaging.config.send.required = http.method
validator.messagingHandlers.HttpsMessaging.config.send.optional = http.uri.extension, status.code
validator.messagingHandlers.HttpsMessaging.deprecated = true
validator.messagingHandlers.HttpsMessaging.replacedBy = HttpMessagingV2
# HttpProxyMessaging inputs and configs.
validator.messagingHandlers.HttpProxyMessaging.input.optional = request_data
validator.messagingHandlers.HttpProxyMessaging.config.send.optional = proxy.address
validator.messagingHandlers.HttpProxyMessaging.deprecated = true
# AS2Messaging inputs and configs.
validator.messagingHandlers.AS2Messaging.input.required = as2_message
validator.messagingHandlers.AS2Messaging.input.optional = http_headers
validator.messagingHandlers.AS2Messaging.config.receive.optional = status.code
validator.messagingHandlers.AS2Messaging.config.send.optional = as2.encoding, http.uri.extension, status.code
validator.messagingHandlers.AS2Messaging.deprecated = true
# DNSMessaging inputs and configs.
validator.messagingHandlers.DNSMessaging.input.required = dns.address
validator.messagingHandlers.DNSMessaging.config.receive.required = dns.domain
validator.messagingHandlers.DNSMessaging.deprecated = true
# NonValidatingPeppolAS2Messaging inputs and configs.
validator.messagingHandlers.NonValidatingPeppolAS2Messaging.input.optional = http_headers, business_document
validator.messagingHandlers.NonValidatingPeppolAS2Messaging.deprecated = true
# OFTP2Messaging inputs and configs.
validator.messagingHandlers.OFTP2Messaging.input.required = file_content, file_name
validator.messagingHandlers.OFTP2Messaging.config.receive.optional = secure.connection, buffer.size, window.size
validator.messagingHandlers.OFTP2Messaging.config.send.optional = secure.connection, buffer.size, window.size
validator.messagingHandlers.OFTP2Messaging.deprecated = true
# PeppolAS2Messaging inputs and configs.
validator.messagingHandlers.PeppolAS2Messaging.input.optional = http_headers, business_document
validator.messagingHandlers.PeppolAS2Messaging.config.receive.optional = document.identifier, process.identifier
validator.messagingHandlers.PeppolAS2Messaging.config.send.optional = http.uri.extension
validator.messagingHandlers.PeppolAS2Messaging.deprecated = true
# SMLMessaging inputs and configs.
validator.messagingHandlers.SMLMessaging.input.required = dns.address
validator.messagingHandlers.SMLMessaging.config.receive.required = dns.domain
validator.messagingHandlers.SMLMessaging.deprecated = true
# SMPFixedMessaging inputs and configs.
validator.messagingHandlers.SMPFixedMessaging.input.required = smp_metadata
validator.messagingHandlers.SMPFixedMessaging.input.optional = http_headers
validator.messagingHandlers.SMPFixedMessaging.config.send.optional = http.uri.extension
validator.messagingHandlers.SMPFixedMessaging.deprecated = true
# SMPMessaging inputs and configs.
validator.messagingHandlers.SMPMessaging.input.required = smp_metadata
validator.messagingHandlers.SMPMessaging.input.optional = http_headers
validator.messagingHandlers.SMPMessaging.config.send.optional = http.uri.extension
validator.messagingHandlers.SMPMessaging.deprecated = true
# UDPMessaging inputs and configs.
validator.messagingHandlers.UDPMessaging.input.required = content
validator.messagingHandlers.UDPMessaging.deprecated = true
# SimulatedMessaging inputs and configs.
validator.messagingHandlers.SimulatedMessaging.input.optional = parameters, contentTypes, result, delay
# The embedded validation handlers to consider for valid handler references.
validator.validationHandlers = NumberValidator, StringValidator, RegExpValidator, XPathValidator, XsdValidator, SchematronValidator, XmlMatchValidator, ExpressionValidator, XmlValidator, ShaclValidator, JsonValidator, YamlValidator
# NumberValidator inputs.
validator.validationHandlers.NumberValidator.input.required = actual, expected
validator.validationHandlers.NumberValidator.input.optional = successMessage, failureMessage
# StringValidator inputs.
validator.validationHandlers.StringValidator.input.required = actual, expected
validator.validationHandlers.StringValidator.input.optional = successMessage, failureMessage
# RegExpValidator inputs.
validator.validationHandlers.RegExpValidator.input.required = input, expression
validator.validationHandlers.RegExpValidator.input.optional = successMessage, failureMessage
# XPathValidator inputs.
validator.validationHandlers.XPathValidator.input.required = xml, expression
validator.validationHandlers.XPathValidator.input.optional = successMessage, failureMessage
# XsdValidator inputs.
validator.validationHandlers.XsdValidator.input.required = xsd, xml
validator.validationHandlers.XsdValidator.input.optional = showSchema, sortBySeverity
# SchematronValidator inputs.
validator.validationHandlers.SchematronValidator.input.required = schematron, xml
validator.validationHandlers.SchematronValidator.input.optional = type, showSchematron, showTests, sortBySeverity, showLocationPaths
# XmlMatchValidator inputs.
validator.validationHandlers.XmlMatchValidator.input.required = xml, template
validator.validationHandlers.XmlMatchValidator.input.optional = ignoredPaths
# ExpressionValidator inputs.
validator.validationHandlers.ExpressionValidator.input.required = expression
validator.validationHandlers.ExpressionValidator.input.optional = successMessage, failureMessage
# XmlValidator inputs.
validator.validationHandlers.XmlValidator.input.required = xml
validator.validationHandlers.XmlValidator.input.optional = xsd, schematron, schematronType, stopOnXsdErrors, showValidationArtefacts, sortBySeverity, showSchematronTests, showLocationPaths
# ShaclValidator inputs.
validator.validationHandlers.ShaclValidator.input.required = model, contentType
validator.validationHandlers.ShaclValidator.input.optional = shapes, reportContentType, showShapes, sortBySeverity, showReport, loadImports, mergeModelsBeforeValidation
# JsonValidator inputs.
validator.validationHandlers.JsonValidator.input.required = json
validator.validationHandlers.JsonValidator.input.optional = schema, showSchema, schemaCombinationApproach, supportYaml
# YamlValidator inputs.
validator.validationHandlers.YamlValidator.input.required = yaml
validator.validationHandlers.YamlValidator.input.optional = schema, showSchema, schemaCombinationApproach, supportJson
# The embedded processing handlers to consider for valid handler references.
validator.processingHandlers = TokenGenerator, CollectionUtils, RegExpProcessor, Base64Processor, TemplateProcessor, DisplayProcessor, XsltProcessor, DelayProcessor, JsonPointerProcessor, VariableUtils, XPathProcessor, RdfUtils
validator.processingHandlers.TokenGenerator.operations = timestamp, uuid, string, random
validator.processingHandlers.TokenGenerator.operations.timestamp.input.optional = format, time, diff, zone, date, inputFormat
validator.processingHandlers.TokenGenerator.operations.uuid.input.optional = prefix, postfix
validator.processingHandlers.TokenGenerator.operations.string.input.required = format
validator.processingHandlers.TokenGenerator.operations.random.input.optional = minimum, maximum, integer
validator.processingHandlers.CollectionUtils.operations = size, clear, contains, randomKey, randomValue, remove, append, find
validator.processingHandlers.CollectionUtils.operations.size.input.optional = map, list
validator.processingHandlers.CollectionUtils.operations.clear.input.optional = map, list
validator.processingHandlers.CollectionUtils.operations.contains.input.optional = map, list, ignoreCase
validator.processingHandlers.CollectionUtils.operations.contains.input.required = value
validator.processingHandlers.CollectionUtils.operations.randomKey.input.optional = map, list
validator.processingHandlers.CollectionUtils.operations.randomValue.input.optional = map, list
validator.processingHandlers.CollectionUtils.operations.remove.input.optional = map, list
validator.processingHandlers.CollectionUtils.operations.remove.input.required = item
validator.processingHandlers.CollectionUtils.operations.append.input.optional = fromList, toList, fromMap, toMap, onlyMissing, ignoreCase
validator.processingHandlers.CollectionUtils.operations.find.input.optional = map, list, ignoreCase
validator.processingHandlers.CollectionUtils.operations.find.input.required = value
validator.processingHandlers.RegExpProcessor.operations = check, collect
validator.processingHandlers.RegExpProcessor.operations.check.input.required = input, expression
validator.processingHandlers.RegExpProcessor.operations.collect.input.required = input, expression
validator.processingHandlers.Base64Processor.operations = encode, decode
validator.processingHandlers.Base64Processor.operations.encode.input.required = input
validator.processingHandlers.Base64Processor.operations.encode.input.optional = dataUrl
validator.processingHandlers.Base64Processor.operations.decode.input.required = input
validator.processingHandlers.TemplateProcessor.operations = process
validator.processingHandlers.TemplateProcessor.operations.process.input.required = template
validator.processingHandlers.TemplateProcessor.operations.process.input.optional = syntax, parameters
validator.processingHandlers.DisplayProcessor.operations = display
validator.processingHandlers.DisplayProcessor.operations.display.input.optional = parameters, contentTypes, result
validator.processingHandlers.XsltProcessor.operations = process
validator.processingHandlers.XsltProcessor.operations.process.input.required = xml, xslt
validator.processingHandlers.DelayProcessor.operations = delay
validator.processingHandlers.DelayProcessor.operations.delay.input.required = duration
validator.processingHandlers.JsonPointerProcessor.operations = process
validator.processingHandlers.JsonPointerProcessor.operations.process.input.required = content, pointer
validator.processingHandlers.VariableUtils.operations = type, exists
validator.processingHandlers.VariableUtils.operations.type.input.required = name
validator.processingHandlers.VariableUtils.operations.exists.input.required = name
validator.processingHandlers.XPathProcessor.operations = process
validator.processingHandlers.XPathProcessor.operations.process.input.required = input, expression
validator.processingHandlers.XPathProcessor.operations.process.input.optional = type
validator.processingHandlers.RdfUtils.operations = convert, merge, ask, select, construct
validator.processingHandlers.RdfUtils.operations.convert.input.required = model, inputContentType, outputContentType
validator.processingHandlers.RdfUtils.operations.merge.input.required = models
validator.processingHandlers.RdfUtils.operations.merge.input.optional = inputContentTypes, inputContentType, outputContentType
validator.processingHandlers.RdfUtils.operations.ask.input.required = model, inputContentType, query
validator.processingHandlers.RdfUtils.operations.select.input.required = model, inputContentType, query
validator.processingHandlers.RdfUtils.operations.select.input.optional = outputContentType
validator.processingHandlers.RdfUtils.operations.construct.input.required = model, inputContentType, query
validator.processingHandlers.RdfUtils.operations.construct.input.optional = outputContentType
# The supported data types (simple and container types).
validator.dataTypes = string, number, boolean, binary, object, schema
validator.containedDataTypes = string, number, boolean, binary, object, schema, map
validator.containerDataTypes = map, list
# The accepted mime types for the test suite ZIP archive.
validator.acceptedMimeTypes = application/zip, application/x-zip-compressed, multipart/x-zip
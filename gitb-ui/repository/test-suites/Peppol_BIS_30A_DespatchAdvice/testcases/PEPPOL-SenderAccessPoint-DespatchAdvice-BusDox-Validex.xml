<?xml version="1.0" encoding="UTF-8"?>
<testcase id="PEPPOL-SenderAccessPoint-DespatchAdvice-BusDox-Validex" xmlns="http://www.gitb.com/tdl/v1/" xmlns:gitb="http://www.gitb.com/core/v1/">
    <metadata>
        <gitb:name>PEPPOL-SenderAccessPoint-DespatchAdvice-BusDox-Validex</gitb:name>
        <gitb:type>CONFORMANCE</gitb:type>
        <gitb:version>0.1</gitb:version>
        <gitb:description>The objective of this Test Scenario is to ensure the Sender Access Point (the System Under
            Test) is capable of querying both SML and SMP as well as submitting a conformant PEPPOL BIS 4A electronic
            despatch advice to a Receiver Access Point using the AS2 protocol. Then submitted document is validated by
            UBL 2.1 schema and PEPPOL Schematron rules.
        </gitb:description>
    </metadata>
    <namespaces>
    </namespaces>
    <imports>
        <artifact type="schema" encoding="UTF-8" name="UBL_DespatchAdvice_Schema_File">Peppol_BIS_30A_DespatchAdvice/artifacts/UBL/maindoc/UBL-DespatchAdvice-2.1.xsd</artifact>
        <artifact type="schema" encoding="UTF-8" name="PEPPOL_BII_CORE_DespatchAdvice_Schematron_File" >Peppol_BIS_30A_DespatchAdvice/artifacts/PEPPOL/BII CORE/BIICORE-UBL-T16-V1.0.sch</artifact>
        <artifact type="schema" encoding="UTF-8" name="PEPPOL_BII_RULES_DespatchAdvice_Schematron_File">Peppol_BIS_30A_DespatchAdvice/artifacts/PEPPOL/BII RULES/BIIRULES-UBL-T16.sch</artifact>
        <artifact type="schema" encoding="UTF-8" name="SBDH_Schematron_File" >Peppol_BIS_30A_DespatchAdvice/artifacts/PEPPOL/SBDH.sch</artifact>
        <artifact type="object" encoding="UTF-8" name="SMP_Metadata_Template">Peppol_BIS_30A_DespatchAdvice/artifacts/PEPPOL/peppol-smp-metadata-template.xml</artifact>
    </imports>
    <actors>
        <gitb:actor id="SenderAccessPoint" name="SenderAccessPoint" role="SUT" />
        <gitb:actor id="ReceiverAccessPoint" name="ReceiverAccessPoint" role="SIMULATED">
            <gitb:endpoint name="as2">
                <gitb:config name="participant.identifier">0088:12345test</gitb:config>
            </gitb:endpoint>
        </gitb:actor>
        <gitb:actor id="ServiceMetadataLocator" name="ServiceMetadataLocator" role="SIMULATED" />
        <gitb:actor id="ServiceMetadataPublisher" name="ServiceMetadataPublisher" role="SIMULATED" />
    </actors>
    <variables>
        <var name="as2_address" type="string" />

        <!-- Participant Identifier of Sender Access Point (System Under Test). Must be retrieved
             from SUT representative -->
        <var name="sender_participant_identifier" type="string" />
        <!-- Participant Identifier of Receiver Access Point (Simulated) -->
        <var name="receiver_participant_identifier" type="string" />
        <!-- Represents the type of document that the recipient is able to handle -->
        <var name="document_identifier" type="string">
            <value>urn:oasis:names:specification:ubl:schema:xsd:DespatchAdvice-2::DespatchAdvice##urn:www.cenbii.eu:transaction:biitrns016:ver1.0:extended:urn:www.peppol.eu:bis:peppol30a:ver1.0::2.1</value>
        </var>
        <!-- Root namespace of the document identifier  -->
        <var name="document_identifier_ns" type="string">
            <value>urn:oasis:names:specification:ubl:schema:xsd:DespatchAdvice-2</value>
        </var>
        <!-- The identifier of the process -->
        <var name="process_identifier" type="string">
            <value>urn:www.cenbii.eu:profile:bii30:ver2.0</value>
        </var>
        <!-- XML local element name of the root-element in the business message -->
        <var name="business_message_type" type="string">
            <value>DespatchAdvice</value>
        </var>

    </variables>
    <steps>
        <assign to="$as2_address">concat("https://", $SenderAccessPoint{ReceiverAccessPoint}{network.host}, ":", $SenderAccessPoint{ReceiverAccessPoint}{network.port})</assign>
        <assign to="$receiver_participant_identifier" source="$SenderAccessPoint{ReceiverAccessPoint}{participant.identifier}" />
        <assign to="$sender_participant_identifier"   source="$SenderAccessPoint{participant.identifier}" />

        <btxn from="SenderAccessPoint" to="ServiceMetadataLocator" txnId="t3" handler="SMLMessaging"/>
        <receive id="sml_output" desc="Locate SMP" from="SenderAccessPoint" to="ServiceMetadataLocator" txnId="t3">
            <config name="dns.domain">B-351cd3bce374194b60c770852a53d0e6.iso6523-actorid-upis.localhost.</config>
        </receive>
        <send desc="Resolve SMP domain" from="ServiceMetadataLocator" to="SenderAccessPoint" txnId="t3">
            <input name="dns.address" source="$SenderAccessPoint{ServiceMetadataPublisher}{network.host}"/>
        </send>
        <etxn txnId="t3"/>

        <btxn from="SenderAccessPoint" to="ServiceMetadataPublisher" txnId="t2" handler="SMPMessaging"/>
        <receive id="smp_output" desc="Send message to SMP to get Receiver Access Point address" from="SenderAccessPoint" to="ServiceMetadataPublisher" txnId="t2" />
        <send id="smp" desc="Send SMP Metadata back"  from="ServiceMetadataPublisher" to="SenderAccessPoint" txnId="t2">
            <input name="smp_metadata" source="$SMP_Metadata_Template"/>
        </send>
        <etxn txnId="t2"/>

        <btxn from="SenderAccessPoint" to="ReceiverAccessPoint" txnId="t1" handler="PeppolAS2Messaging"/>
        <receive id="as2_output" desc="Send message to Receiver Access Point" from="SenderAccessPoint" to="ReceiverAccessPoint" txnId="t1" >
            <config name="document.identifier">urn:oasis:names:specification:ubl:schema:xsd:DespatchAdvice-2::DespatchAdvice##urn:www.cenbii.eu:transaction:biitrns016:ver1.0:extended:urn:www.peppol.eu:bis:peppol30a:ver1.0::2.1</config>
            <config name="process.identifier">urn:www.cenbii.eu:profile:bii30:ver2.0</config>
        </receive>
        <send id="mdn" desc="Send MDN back to Sender Access Point"  from="ReceiverAccessPoint" to="SenderAccessPoint" txnId="t1">
            <input name="http_headers" source="$as2_output{http_headers}" />
        </send>
        <etxn txnId="t1"/>

        <verify handler="ValidexValidator" desc="Validate Despatch Advice document using the Validex validation service">
            <input name="document">$as2_output{business_message}</input>
            <input name="name">"Despatch Advice document"</input>
        </verify>
    </steps>
</testcase>
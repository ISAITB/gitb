/*
 * Copyright (C) 2025 European Union
 *
 * Licensed under the EUPL, Version 1.2 or - as soon they will be approved by the European Commission - subsequent
 * versions of the EUPL (the "Licence"); You may not use this work except in compliance with the Licence.
 *
 * You may obtain a copy of the Licence at:
 *
 * https://interoperable-europe.ec.europa.eu/collection/eupl/eupl-text-eupl-12
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the Licence is distributed on an
 * "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the Licence for
 * the specific language governing permissions and limitations under the Licence.
 */

package models

import utils.TimeUtil

import java.sql.Timestamp

class ConformanceStatementFull(
    val communityId: Long,
    val communityName: String,
    val organizationId: Long,
    val organizationName: String,
    systemId: Long,
    val systemName: String,
    val systemBadgeKey: String,
    val systemDescription: Option[String],
    val systemVersion: Option[String],
    domainId: Long,
    domainName: String,
    domainNameFull: String,
    domainDescription: Option[String],
    domainReportMetadata: Option[String],
    actorId: Long,
    actorName: String,
    actorFull: String,
    actorDescription: Option[String],
    actorReportMetadata: Option[String],
    val actorApiKey: String,
    specificationId: Long,
    specificationName: String,
    specificationNameFull: String,
    specificationDescription: Option[String],
    specificationReportMetadata: Option[String],
    specificationDisplayOrder: Short,
    specificationGroupId: Option[Long],
    specificationGroupName: Option[String],
    specificationGroupDescription: Option[String],
    specificationGroupReportMetadata: Option[String],
    val specificationGroupNameFull: Option[String],
    specificationGroupDisplayOrder: Option[Short],
    val specificationGroupOptionName: String,
    val specificationGroupOptionNameFull: String,
    val testSuiteId: Option[Long],
    val testSuiteName: Option[String],
    val testSuiteDescription: Option[String],
    val testSuiteSpecReference: Option[String],
    val testSuiteSpecDescription: Option[String],
    val testSuiteSpecLink: Option[String],
    val testSuiteVersion: String,
    val testCaseId: Option[Long],
    val testCaseName: Option[String],
    val testCaseDescription: Option[String],
    val testCaseOptional: Option[Boolean],
    val testCaseDisabled: Option[Boolean],
    val testCaseTags: Option[String],
    val testCaseOrder: Option[Short],
    val testCaseSpecReference: Option[String],
    val testCaseSpecDescription: Option[String],
    val testCaseSpecLink: Option[String],
    val testCaseVersion: String,
    val testCaseGroupId: Option[Long],
    val testCaseGroupIdentifier: Option[String],
    val testCaseGroupName: Option[String],
    val testCaseGroupDescription: Option[String],
    result: String,
    val outputMessage: Option[String],
    val sessionId: Option[String],
    updateTime: Option[Timestamp],
    completedTests: Long,
    failedTests: Long,
    undefinedTests: Long,
    completedOptionalTests: Long,
    failedOptionalTests: Long,
    undefinedOptionalTests: Long,
    completedTestsToConsider: Long,
    failedTestsToConsider: Long,
    undefinedTestsToConsider: Long
) extends ConformanceStatement(
  domainId, domainName, domainNameFull, domainDescription, domainReportMetadata,
  actorId, actorName, actorFull, actorDescription, actorReportMetadata,
  specificationId, specificationName, specificationNameFull, specificationDescription, specificationReportMetadata, systemId,
  result, updateTime,
  completedTests, failedTests, undefinedTests,
  completedOptionalTests, failedOptionalTests, undefinedOptionalTests,
  completedTestsToConsider, failedTestsToConsider, undefinedTestsToConsider,
  specificationGroupId, specificationGroupName, specificationGroupDescription, specificationGroupReportMetadata, specificationDisplayOrder, specificationGroupDisplayOrder) {


  override def copy(): ConformanceStatementFull = {
    new ConformanceStatementFull(
      this.communityId,
      this.communityName,
      this.organizationId,
      this.organizationName,
      this.systemId,
      this.systemName,
      this.systemBadgeKey,
      this.systemDescription,
      this.systemVersion,
      this.domainId,
      this.domainName,
      this.domainNameFull,
      this.domainDescription,
      this.domainReportMetadata,
      this.actorId,
      this.actorName,
      this.actorFull,
      this.actorDescription,
      this.actorReportMetadata,
      this.actorApiKey,
      this.specificationId,
      this.specificationName,
      this.specificationNameFull,
      this.specificationDescription,
      this.specificationReportMetadata,
      this.specificationDisplayOrder,
      this.specificationGroupId,
      this.specificationGroupName,
      this.specificationGroupDescription,
      this.specificationGroupReportMetadata,
      this.specificationGroupNameFull,
      this.specificationGroupDisplayOrder,
      this.specificationGroupOptionName,
      this.specificationGroupOptionNameFull,
      this.testSuiteId,
      this.testSuiteName,
      this.testSuiteDescription,
      this.testSuiteSpecReference,
      this.testSuiteSpecDescription,
      this.testSuiteSpecLink,
      this.testSuiteVersion,
      this.testCaseId,
      this.testCaseName,
      this.testCaseDescription,
      this.testCaseOptional,
      this.testCaseDisabled,
      this.testCaseTags,
      this.testCaseOrder,
      this.testCaseSpecReference,
      this.testCaseSpecDescription,
      this.testCaseSpecLink,
      this.testCaseVersion,
      this.testCaseGroupId,
      this.testCaseGroupIdentifier,
      this.testCaseGroupName,
      this.testCaseGroupDescription,
      this.result,
      this.outputMessage,
      this.sessionId,
      TimeUtil.copyTimestamp(this.updateTime),
      this.completedTests,
      this.failedTests,
      this.undefinedTests,
      this.completedOptionalTests,
      this.failedOptionalTests,
      this.undefinedOptionalTests,
      this.completedTestsToConsider,
      this.failedTestsToConsider,
      this.undefinedTestsToConsider
    )
  }

}
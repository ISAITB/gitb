@import "../_common.less";

@actor-width: 240px+1;
@line-color: @gray;
@line-height: 16px;
@macro-limit: 10;
@step-status-width: 4px;
@container-padding: 8px;
@hover-color: @gray-light-1;
@processing-color: #03a9f4;
@waiting-color: darken(@processing-color, 20%);
@error-color: #d32f2f;
@warning-color: #f0ad4e;
@completed-color: #4caf50;
@extra-width-for-report-icons: 20;

.icon-documentation {
  font-size: 18px;
  cursor: pointer;
}

.generate-padding-offsets(@width, @n, @i: 0) when (@i =< @n) {
  &.offset-@{i} {
    padding-left: ((@i * @width) - @i);
  }
  .generate-padding-offsets(@width, @n, (@i + 1));
}
.remove-padding-offsets(@n, @i: 0) when (@i =< @n) {
  &.offset-@{i} {
    padding-left: 0;
  }
  .remove-padding-offsets(@n, (@i + 1));
}
.generate-reverse-offsets(@width, @n, @i: 0) when (@i =< @n) {
  &.reverse-offset-@{i} {
    margin-left: (@i * @width * -1);
    &.child-steps.else::before,
    &.child-steps.thread::before {
      left: (@i * @width);
      margin-top: 15px;
    }
  }
  .generate-reverse-offsets(@width, @n, (@i + 1));
}
.generate-orders(@n, @i: 0) when (@i =< @n) {
  &.order-@{i} {
    top: (@i * 100%);
  }
  .generate-orders(@n, (@i + 1));
}
.generate-actor-width-classes(@n, @i: 0) when (@i =< @n) {
  &.actor-diagram-@{i} {
    width: ((@i+1) * @actor-width);
  }
  .generate-actor-width-classes(@n, (@i + 1));
}

.generate-level-reverse-margins(@depth, @n, @i: 0) when (@i =< @n) {
  &.level-@{i} {
    margin-left: (-1px * (@container-padding * @depth)) !important;
  }

  .generate-level-reverse-margins(@depth, @n, (@i+1));
}

.generate-depth-paddings(@n, @i: 0) when (@i =< @n) {
  &.depth-@{i} {
    padding: (@container-padding * @i / 2) (@container-padding * @i) !important;

    .generate-level-reverse-margins(@i, @n);
    & > .message-body > .child-steps.else::before,
    & > .message-body > .child-steps.thread::before {
      margin-left: (-1 * (@container-padding * @i)) !important;
      margin-right: (-1 * (@container-padding * @i)) !important;
    }
  }

  .generate-depth-paddings(@n, (@i+1));
}

.generate-depth-spans(@width, @span, @n, @i: 0) when (@i =< @n) {
  &.depth-@{i} {
    width: ((@width * @span) + (2 * @i * @container-padding) + 10 + @extra-width-for-report-icons);

    & > .message-body > .child-steps.else::before,
    & > .message-body > .child-steps.thread::before {
      width: ((@width * @span) + (2 * @i * @container-padding) - 1 + @extra-width-for-report-icons);
    }
  }
  .generate-depth-spans(@width, @span, @n, (@i+1));
}

.generate-spans(@width, @is-container-type, @n, @i: 0) when (@i =< @n) {
  &.span-@{i} {
    width: (@i * @width);
    & when (@is-container-type = true) {
      .generate-depth-spans(@width, @i, @n);
    }
  }
  .generate-spans(@width, @is-container-type, @n, (@i + 1));
}

.sequence-diagram {
  position: relative;
  min-height: 100px;
  .generate-actor-width-classes(@macro-limit);
  .actor-container {
    height: 95%;
    .actor {
      display: inline-block;
      width: @actor-width;
      height: 95%;
      position: relative;

      .name {
        display: block;
        text-align: center;
        line-height: @line-height;
      }
    }
  }

  .lifeline-container {
    position: absolute;
    top: (@line-height * 2);
    left: (@actor-width / 2);
    height: 100%;
    min-height: 100px;
    z-index: 200;
    .lifeline {
      display: inline-block;
      width: (@actor-width - 1);
      height: calc(100% - 15px);
      border-left: 1px dashed @line-color;
      content: " ";

    }
  }

  .message-container {
    @arrow-size: 12px;

    display: inline-block;
    padding-left: (@actor-width / 2);

    .message-wrapper {
      position: relative;
      margin-top: 4px;

      .generate-padding-offsets(@actor-width, @macro-limit);
      .generate-reverse-offsets(@actor-width, @macro-limit);

      .message {
        padding: 10px 0;
        position: relative;

        & > .message-type {
          display: none;
          position: absolute;
          bottom: 100%;
          left: 10%;
          background-color: white;
          padding: 4px 8px;
          border-left: 1px solid @line-color;
          border-right: 1px solid @line-color;
          border-top: 1px solid @line-color;
          z-index: 300;

          .iterations {
            @font-size: 12px;
            margin-left: 8px;
            display: inline-flex;
            .dropdown-toggle {
              font-size: @font-size;
              margin: 0px;
              padding-left: 5px;
              padding-right: 5px;
              padding-top: 2px;
              padding-bottom: 2px;
              background-color: @line-color;
              color: white;
              &:hover {
                background-color: lighten(@line-color, 10%);
              }
            }

            .dropdown-menu {
              min-width: 100%;
              margin: -2px 0 0;
              background-color: @line-color;
              border-radius: 0 0 3px 3px;
              font-size: @font-size;
              padding: 0px;
              overflow-y: hidden;

              .add-hover-effect(@color) {
                &:hover {
                  background-color: lighten(@color, 10%);
                }
              }

              .add-status-bar(@color) {
                &::before {
                  content: " ";
                  width: 4px;
                  height: 100%;
                  position: absolute;
                  left: 0;
                  top: 1px;
                  background-color: @color;
                }
              }

              .dropdown-item {
                padding: 2px 8px;
                border-top: 1px solid white;
                position: relative;
                color: white;
                .add-hover-effect(@line-color);

                &.processing {
                  .add-status-bar(@waiting-color);
                }

                &.waiting {
                  .add-status-bar(@waiting-color);
                }

                &.error {
                  .add-status-bar(@error-color);
                }

                &.warning {
                  .add-status-bar(@warning-color);
                }

                &.completed {
                  .add-status-bar(@completed-color);
                }
              }
            }

            &:hover {
              cursor: pointer;
            }
          }
        }

        .message-info {
          position: relative;
		  z-index: 200;
        }

        .message-report {
          display: none;
          position: absolute;
          left: 100%;
          top: 12px;
          font-size: 16px;
		      z-index: 300;
          i {
            display: none;

            &.status-background-icon {
              display: block;
              font-size: 18px !important;
            }

            &.report-icon {
              color: @line-color !important;
              display: block;
              font-size: 28px;
            }

            &.processing-icon,
            &.completed-icon,
            &.error-icon,
            &.warning-icon,
            &.status-background-icon {
              display: none;
              position: absolute;
              left: 35%;
              top: 45%;
              color: #fff;
              font-size: 12px;
              width: 18px;
              height: 18px;
              line-height: 18px;
              text-align: center;
              vertical-align: middle;
            }
          }
        }

        .title-container {
          display: flex;
          justify-content: center;
        }

        .title {
          display: inline-flex;
          background: @white;
          text-align: center;
          padding: 0 8px;

          &.skipped {
            text-decoration: line-through;
          }
        }

        .child-steps {
          .message-wrapper {
            margin-left: -1px;
          }
        }

        .step-icon {
          @icon-size: 32px;
          width: @icon-size;
          height: @icon-size;
          left: (-1 * (@icon-size / 2));
          margin-top: -4px;
          text-align: center;
          display: block;
          position: absolute;

          i {
            font-size: @icon-size;
          }
        }

        .arrow {
          width: 100%;
          border-bottom: 3px solid @line-color;
          position: relative;

          &::after {
            position: absolute;
            bottom: (-1 * (@arrow-size / 2+1));
            right: 0;
            content: " ";
            width: 0;
            height: 0;
            border-top: (@arrow-size / 2) solid transparent;
            border-left: @arrow-size solid @line-color;
            border-bottom: (@arrow-size / 2) solid transparent;
          }
        }

        &.self-message {
          .title {
            text-align: left;
            min-height: 22px;
          }
          .arrow {
            width: @line-height;
            height: @line-height;
            border: 3px solid @line-color;
            border-left-color: transparent;

            &::after {
              right: auto;
              left: 0;
              border-left: none;
              border-top: (@arrow-size / 2) solid transparent;
              border-right: @arrow-size solid @line-color;
              border-bottom: (@arrow-size / 2) solid transparent;
            }
          }
        }

        &.waiting {
          & > .message-body > .arrow {
            border-color: @waiting-color;
            &::after {
              border-left-color: @waiting-color !important;
              border-right-color: @waiting-color !important;
            }
          }
          &.self-message > .arrow::after {
            border-left-color: transparent;
            border-right-color: @waiting-color;
          }
          & > .message-info > .step-icon {
            color: @waiting-color;
          }
        }

        &.processing {
          & > .message-body > .arrow {
            border-color: @processing-color;
            &::after {
              border-left-color: @processing-color !important;
              border-right-color: @processing-color !important;
            }
          }
          & > .message-body > .message-report {
            i {
              &.status-background-icon {
                display: block;
                color: @processing-color;
              }

              &.processing-icon {
                display: block;
              }
            }
          }
          &.self-message > .message-body > .arrow::after {
            border-left-color: transparent;
            border-right-color: @processing-color;
          }
          & > .message-info > .step-icon {
            color: @processing-color;
          }
        }

        &.error {
          & > .message-body > .arrow {
            border-color: @error-color;
            &::after {
              border-left-color: @error-color !important;
              border-right-color: @error-color !important;
            }
          }
          & > .message-body > .message-report {
            i {
              &.status-background-icon {
                display: block;
                color: @error-color;
              }

              &.error-icon {
                display: block;
              }
            }
          }
          &.self-message > .message-body > .arrow::after {
            border-left-color: transparent;
            border-right-color: @error-color;
          }
          & > .message-info > .step-icon {
            color: @error-color;
          }
        }

        &.warning {
          & > .message-body > .arrow {
            border-color: @warning-color;
            &::after {
              border-left-color: @warning-color !important;
              border-right-color: @warning-color !important;
            }
          }
          & > .message-body > .message-report {
            i {
              &.status-background-icon {
                display: block;
                color: @warning-color;
              }

              &.warning-icon {
                display: block;
              }
            }
          }
          &.self-message > .message-body > .arrow::after {
            border-left-color: transparent;
            border-right-color: @warning-color;
          }
          & > .message-info > .step-icon {
            color: @warning-color;
          }
        }

        &.completed {
          & > .message-body > .arrow {
            border-color: @completed-color;
            &::after {
              border-left-color: @completed-color !important;
              border-right-color: @completed-color !important;
            }
          }
          & > .message-body > .message-report {
            i {
              &.status-background-icon {
                display: block;
                color: @completed-color;
              }

              &.completed-icon {
                display: block;
              }
            }
          }
          &.self-message > .message-body > .arrow::after {
            border-left-color: transparent;
            border-right-color: @completed-color;
          }
          & > .message-info > .step-icon {
            color: @completed-color;
          }
        }

        &.span-0 {
          width: @actor-width !important;
        }

        &.backwards-message {
          .generate-reverse-offsets(@actor-width, 10);

          .arrow {
            &::after {
              border-left: none;
              border-right: @arrow-size solid @line-color;
              right: auto;
              left: 0;
            }
          }
        }

        .generate-spans(@actor-width, false, @macro-limit);
        .generate-orders(@macro-limit);
      }

      .status-wrapper {
        display: none;
        position: absolute;
        left: -1px;
        top: -1px;
        bottom: -1px;

        & > .status {
          background-color: @line-color;
          width: @step-status-width;
          height: 100%;

          &.waiting {
            background-color: @waiting-color;
          }

          &.processing {
            background-color: @processing-color;
          }

          &.error {
            background-color: @error-color;
          }

          &.warning {
            background-color: @warning-color;
          }

          &.completed {
            background-color: @completed-color;
          }
        }
      }

      &.verify-type,
	  &.process-type,
      &.exit-type {
        .message {
          .title {
            padding-left: 20px;
          }
        }
      }

      &.msg-type,
      &.process-type,
	  &.verify-type {
        & > .message > .message-body {
          & > .message-report {
            display: block;
          }
        }
      }

      @container-type-padding: 40px;

      &.loop-type, &.decision-type, &.flow-type, &.interact-type, &.group-type {
        & > .message {
          border: 1px solid @line-color;
		      background: white;
          padding: (@container-type-padding / 2) 0;
          margin: @container-type-padding 0 0 0;

        &.hovering {
  			  background: @hover-color;
          .loop-type, .decision-type, .flow-type, .interact-type, .group-type {
            & > .message.notHovering {
              .title {
                background: @white;
              }
            }
          }
          .title {
            background: @hover-color;
          }
		    }

          .generate-depth-paddings(@macro-limit);
          .generate-spans(@actor-width, true, @macro-limit);

          & > .message-body > .message-info {
            margin-left: (@container-type-padding / 2);
          }

          & > .message-type {
            display: flex;
            max-width: 80%;
            &.hovering {
              background: @hover-color;
              cursor: pointer;
            }
            .message-title {
              white-space: nowrap;
              overflow: hidden;
              text-overflow: ellipsis;
              display: inline-flex;
			  user-select: none;
            }
          }

          .child-steps {
            .generate-reverse-offsets(@actor-width, 10);
          }

          & > * > .status-wrapper {
            display: block;
          }
        }
      }

      &.decision-type,
      &.flow-type {
        & > .message {
          & > .message-body > .child-steps {
            position: relative;

            &.else,
            &.thread {
              padding-top: (@container-type-padding / 2);
              &::before {
                content: " ";
                display: block;
                position: absolute;
                top: 0;
                border-top: 2px dashed @line-color;
              }
            }

            & > .title {
              position: absolute;
              left: 0;
              top: 0;
              border: 1px solid @line-color;
            }
          }
        }
      }

      &.flow-type {
        & > .message {
          & > .message-body > .child-steps.thread-0 {
            margin-top: 10px;
            &::before {
              display: none;
            }
          }
        }
      }
    }
  }
}
